#!/usr/bin/python
#
# Copyright 2014 Marco Ceppi <marco@ceppi.net>
#
# juju-pprint is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# juju-pprint is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# For a full copy of the GNU General Public License, see
# <http://www.gnu.org/licenses/>.

import os
import sys
import yaml

import subprocess


class ServiceUnit(object):
    def __init__(self, name, unit_data):
        self.name = name
        self._data = {'public-address': '', 'open-ports': [], 'agent-state': '', 'subordinates': None}
        self._data.update(unit_data)

    def __getattr__(self, item):
        return self._data[item.replace('_', '-')]

    def __getitem__(self, item):
        return self._data[item]


def get_juju_status(juju_env=None):
    cmd = ['juju', 'status']
    if juju_env:
        cmd.append(['-e', juju_env])
    status_raw = subprocess.check_output(cmd)
    return yaml.safe_load(status_raw)


def print_unit(unit, indent=0, quiet=False):
    status_line = "%s: %s %s (%s)"
    if not quiet:
        status_line = "%s- " + status_line
    else:
        indent = 0
        status_line = "%s" + status_line

    print status_line % (" " * indent, unit.name,
                         unit['public-address'],
                         ', '.join(unit['open-ports']), unit['agent-state'])


def main():
    quiet = False
    # I heard they invented this cool thing called argparse
    if '--description' in sys.argv:
        print "Collapsed, pretty version of juju status"
        sys.exit()

    if '--help' in sys.argv:
        print "Collapsed, pretty version of juju stats"
        sys.exit()

    if '-q' in sys.argv:
        quiet = True

    status = get_juju_status()

    for service in status['services']:
        if 'units' in status['services'][service]:
            for u in status['services'][service]['units']:
                unit = ServiceUnit(u, status['services'][service]['units'][u])
                print_unit(unit, quiet=quiet)
                if unit.subordinates:
                    for s in unit.subordinates:
                        sub = ServiceUnit(s, unit.subordinates[s])
                        print_unit(sub, 2, quiet=quiet)


if __name__ == "__main__":
    main()
